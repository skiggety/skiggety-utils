#!/usr/bin/env bash

# This script should accept a keyword, and colorize it consistently and uniquely

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1

# How many of the 6 brightness shades for each of rgb do you want to use for each of rgb and each of
# foreground/background? It should be a number 2 - 6, higher numbers give more possibilities, lower numbers ensure there
# is enough contrast:
RANGE_FROM_6="${RANGE_FROM_6:-3}"
BUMP_FROM_6="$(( 6 - $RANGE_FROM_6 ))"

KEYWORD="$1"
debug_eval_here KEYWORD

# get a sha256 hash of the keyword as an integer:
KEYWORD_HASH=$(echo -n "$KEYWORD" | sha256sum | awk '{print $1}')
KEYWORD_HASH_INT=$((0x${KEYWORD_HASH:0:8}))

offset=$KEYWORD_HASH_INT

light_foreground='false'
if [ "$(( $offset % 2 ))" -eq '0' ]; then
    light_foreground='true'
fi
offset=$(( $offset / 2 ))

# GREEN:
b_g=$(( $offset % $RANGE_FROM_6 ))
offset=$(( $offset / $RANGE_FROM_6 ))
f_g=$(( $offset % $RANGE_FROM_6 ))
offset=$(( $offset / $RANGE_FROM_6 ))
if $light_foreground; then
    f_g=$(( $f_g + $BUMP_FROM_6 ))
else
    b_g=$(( $b_g + $BUMP_FROM_6 ))
fi

# BLUE:
b_b=$(( $offset % $RANGE_FROM_6 ))
offset=$(( $offset / $RANGE_FROM_6 ))
f_b=$(( $offset % $RANGE_FROM_6 ))
offset=$(( $offset / $RANGE_FROM_6 ))
if $light_foreground; then
    f_b=$(( $f_b + $BUMP_FROM_6 ))
else
    b_b=$(( $b_b + $BUMP_FROM_6 ))
fi

# RED:
b_r=$(( $offset % $RANGE_FROM_6 ))
offset=$(( $offset / $RANGE_FROM_6 ))
f_r=$(( $offset % $RANGE_FROM_6 ))
offset=$(( $offset / $RANGE_FROM_6 ))
if $light_foreground; then
    f_r=$(( $f_r + $BUMP_FROM_6 ))
else
    b_r=$(( $b_r + $BUMP_FROM_6 ))
fi

f_code=$(( ( f_r * 36 ) + ( f_g * 6 ) + f_b + 16))
debug_eval_here f_code
b_code=$(( ( b_r * 36 ) + ( b_g * 6 ) + b_b + 16))
debug_eval_here b_code

color_code="\e[1;38;5;${f_code};48;5;${b_code}m"
debug_eval_here color_code

echo -en "${color_code}"
echo -n "$KEYWORD"
echo -e "${no_color}"
