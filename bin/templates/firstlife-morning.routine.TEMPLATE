#!/usr/bin/env bash

# This script asks you to do things as a routine in the morning.

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'

firstlife-preempt-same-script # TODO^3: use this more widely

# TODO^32: this template script should be a laundry list of ideas
# - TODO^33: ..but first I should start using a local version
#   - TODO^34: ..but first I should simplify readability a lot

# TODO^2: use this to make sure we don't ask for the alarm too often: FIRSTLIFE_ALARM_MARKER_FILE="$FIRSTLIFE_DIR/markers/firstlife_outside_alarm_confirmed"

# TODO^12: figure out how to keep this stuff on a schedule:
# - TODO^100: help user set up crontab with a sample file
# - EASY TODO^42: build a timer into firstlife-delegate, keep stats on how long things take, just pairs of task names and times
#   - TODO^41: then make the logs daily, graph the daily linecount

# EASY TODO^10: firstlife-check-calendar could take a message string to override the normal one:
# TODO^68: (EASY) check calendar script should be the one to call 'firstlife-reward', at least if you called it with '--with-reward':
# TODO: if after 6:37 AM:
# # Get the current time

firstlife-delegate --limit-n-times-per-x 1 day 'Make coffee'
firstlife_exit_if_needed # TODO^114: (IN_PROGRESS) # use this and firstlife-preempt-same-script wiiidely, especially routines that might get scheduled multiple times:

firstlife-delegate --limit-n-times-per-x 1 day 'Make sure you have taken any morning medications' || accumulate_error 'did not medicate'

# TODO^98: (IN_PROGRESS) We need away to only do a section of code once per day, kind of like using 'firstlife-delegate --limit-n-times-per-x 1 day', but something we can put around 'firstlife-break'
firstlife-break -t 150

firstlife_exit_if_needed # TODO^38: exit if another instance has taken over at the same time? (this would allow you to schedule the morning routine multiple times to be extra sure, but avoid it actually doubling up on all the tasks

# TODO^72: make sure this only gets asked perhaps once a week:
# TODO^21: mention and help with alarmy and cron:
# EASY TODO^86: help user start firstlife (including morning routine) with cron like I did, automate ensuring a line in local crontab, and use 'crontab-verbose'? (FUN) help user set up crontab like I did (use crontab-verbose?) (to help test on metrigon)
# TODO^91: move out of inner routine, and actually help user set up alarms and cron:
firstlife-delegate --limit-n-times-per-x 2 week 'Make sure you have a phone alarm that ensures you log into this laptop in time for your cron job to fire (for tomorrow). There is one called "Alarmy" that can require a matching photo to what "firstlife-wake" will present in the morning.' || accumulate_error 'BASIC AUTOMATION PROBLEM: alarm not set' # TODO^67: (EASY) use 'firstlife-delegate' instead
firstlife_exit_if_needed

# EASY TODO^84: Or better yet, manage the list of videos here and randomize:
SCOTTS_MEDITATION_PLAYLIST='https://www.youtube.com/playlist?list=PLbyyOcHfeHIqCKsHI62oWS6i4JQfdtcfd'
open "$SCOTTS_MEDITATION_PLAYLIST" 2>/dev/null &
# TODO^2: mute firstlife for the duration. (When exactly to start it? use a 5-minute pomodoro?):
firstlife-delegate --limit-n-times-per-x 1 day '5-minute meditation' || accumulate_error 'did not meditate' # TODO^81: --with-timer 330 (and use timers widely)
firstlife_exit_if_needed

# TODO: maybe start playlist after meditation instead of right at wake time?

firstlife-delegate --limit-n-times-per-x 1 day "Review any habits you working on breaking ('negative' habits in the tracker)" \
    || accumulate_error 'did not work on breaking habits'
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Make sure your phone is at least 25% charged (so you can walk outside with it soon)'
firstlife_exit_if_needed

firstlife-break

firstlife-delegate --limit-n-times-per-x 1 day 'Put away any temptations or distractions'
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Start up some podcasts'
firstlife_exit_if_needed

# TODO^3: firstlife-delegate --with-reward --with-timer $(( 30 * 60 )) 'blah blah':
firstlife-delegate --limit-n-times-per-x 1 day 'Put on exercise clothes (and make sure you have your housekey/earbuds, etc.)' \
    && firstlife-delegate --limit-n-times-per-x 1 day 'Exercise!' \
    || firstlife-delegate --limit-n-times-per-x 1 day 'Schedule exercise for later today' \
    || accumulate_error 'did not exercise'
firstlife_exit_if_needed

# TODO^3: maybe make a 'delegate' function that calls both firstlife-delegate --with-reward and firstlife_exit_if_needed:
firstlife-delegate --limit-n-times-per-x 1 day 'Hit the shower' || accumulate_error 'did not shower'
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Finish morning habits in the habit tracker' || accumulate_error 'did not finish morning habits' # TODO: list them out individually instead?
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Get dressed' || accumulate_error 'did not get dressed'
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Update yesterday in the habit tracker' || accumulate_error 'did not update yesterday in the habit tracker'
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Make coffee again if you want'
firstlife_exit_if_needed

firstlife-break
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Make your bed' || accumulate_error 'did not make your bed'
firstlife_exit_if_needed

firstlife-delegate --limit-n-times-per-x 1 day 'Break your fast' || accumulate_error 'skipped breakfast'
firstlife_exit_if_needed

firstlife-delegate 'Keep the tunes pumping (you can use "firstlife-music")'
firstlife_exit_if_needed

exit_with_any_accumulated_errors

# TODO^22: make sure firstlife_exit_if_needed is aware of errors?

# EASY TODO^101: (IN_PROGRESS) firstlife-check-calendar could take a message string to override the normal one:
# TODO^68: (EASY) check calendar script should be the one to call 'firstlife-reward', at least if you called it with '--with-reward':
    && firstlife-check-calendar -m 'Your calendar is about to come up. When it does, mark how long your morning routine took, and plan your day, OK?' \
    || accumulate_error 'did not check calendar'

# TODO: do I want this here? do I want it in other high-level firstlife scripts?:
echo "$(basename $0) succeeded!"
firstlife-reward $(basename $0)

exit 0
