#!/usr/bin/env bash

# Use this script as a basis for your personal multitasking routine, uncommenting what's useful without making it too
# complicated. This is a very loose example, feel free to rearrange and comment/uncomment stuff, usually a paragraph at
# a time.

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'
. $SKIGGETY_UTILS_DIR/lib/today_todo.bash || exit_with_error 'could not include today_todo.bash'

MULTITASKING_COUNT=3
PASSES_AT_TODO_LIST=2 # IGNORE_TODO

####################################################################################################

# EASY TODO^89: inside this script and elsewhere, use 'firstlife-delegate --with-reward' instead of calling 'shellask' directly:

exit_if_day_is_over

# EASY TODO^50: use firstlife-reward with description argument(s), generally
shellask 'make sure various devices including this one are charged/charging' \
    && firstlife-reward \
    || accumulate_error 'should have charged your devices' # TODO: don't ask more than once every 3 hours
exit_if_day_is_over

firstlife-check-calendar || accumulate_error 'did not check calendar' # TODO^71: TEST NOW
exit_if_day_is_over

shellask 'do one act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
exit_if_day_is_over

shellask 'do another act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
exit_if_day_is_over

shellask 'put a few things away' && firstlife-reward || accumulate_error 'did not put things away'
exit_if_day_is_over

shellask 'put away any temptations or distractions' && firstlife-reward || accumulate_error 'did not clear distractions'
firstlife-delegate 'keep the tunes pumping (you can use "firstlife-music")' || accumulate_error 'did not DJ for yourself'
exit_if_day_is_over

firstlife-break # TODO: -t 120 # seconds

#### Today's Todo List #############################################################################

for num in $(seq $PASSES_AT_TODO_LIST); do
    # EASY TODO^85: maybe the inside of the loop could be more like merely:
    # EASY TODO^85:     today_todo
    # EASY TODO^85:     shellask 'work on your one of your top 3 todos and downvote it if appropriate'

    shellask 'Handle 1 important item from from any paper lists, possibly by putting it into today_todo' && firstlife-reward || accumulate_error 'ignored paper todo list'
    exit_if_day_is_over

    # TODO^14: only do this if you haven't yet cleared them all today yet:
    open 'https://www.google.com/calendar/render' # EASY TODO^86: script extract
    shellask 'take care of a calendar task, maybe by putting it into today_todo' && firstlife-reward || accumulate_error 'ignored paper todo list'
    exit_if_day_is_over

    today_todo --non-interactive
    shellask 'run today_todo once or twice to make sure you are ready to focus on the right stuff' || \
        accumulate_error 'did not get tasks organized'
    exit_if_day_is_over

    today_todo --non-interactive | grep --color=always '\(POINT\|--------\|^$\)'
    shellask 'run today_todo again to tag or upvote something worth productivity POINTS' || \
        accumulate_error 'did not get focus on the important stuff'
    exit_if_day_is_over

    # EASY TODO^88: extract this bit that works on a few todos to firstlife-work-on-top-n-todos -n $MULTITASKING_CONSTANT
    pushd $TODAY_todo_DIR > /dev/null
    todos="$($SKIGGETY_UTILS_DIR/bin/todo|grep '\(NOW\|EASY\)'|tail -n $MULTITASKING_COUNT|tac)" # lump "EASY" in with "NOW", might as well do easy stuff right away
    ORIGINAL_IFS="$IFS"
    IFS=$'\n'
    NEWLINE='
    '
    read -rd '' -a todos_as_array <<<"$todos"
    debug_here "echo \${todos_as_array} contains"
    for todo_line in ${todos_as_array[@]};do
        shellask "Work on this task (and downvote or mark done using today_todo):${NEWLINE}${todo_line}" && \
            firstlife-reward || \
            accumulate_error "Didn't work on todo: $todo_line"

        # EASY TODO^54: loop through known tags:
        # TODO^85: something like this needs to happen actually before you do the task:
        if echo $todo_line | grep ERRAND > /dev/null; then
            today_todo -n | grep ERRAND
            firstlife-delegate --with-reward "Maybe handle some other errands"
        fi
        if echo $todo_line | grep PURCHASE > /dev/null; then
            today_todo -n | grep PURCHASE
            firstlife-delegate --with-reward "Maybe handle some other purchases"
        fi

        exit_if_day_is_over
    done
    IFS="$ORIGINAL_IFS"
    popd > /dev/null

    shellask 'Do one act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
    exit_if_day_is_over

    firstlife-check-email --with-reward || accumulate_error 'ignored email'
    exit_if_day_is_over

    firstlife-break

    shellask 'Do one act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
    exit_if_day_is_over

    # TODO^86: if you have not finished all dishes at least once today
    firstlife-delegate --with-reward 'Put away 2 dry dishes if needed' || accumulate_error 'Did not put away dishes'
    exit_if_day_is_over

    firstlife-delegate --with-reward 'Wash 1 dish' || accumulate_error 'Did not wash a dish'
    # TODO: fi
    exit_if_day_is_over

    firstlife-check-email --with-reward || accumulate_error 'ignored email'
    exit_if_day_is_over

    today_todo -n | grep '\(CONFIRMING\|--------\|^$\)' # TODO: TEST
    firstlife-delegate --with-reward 'Mark something DONE that is "CONFIRMING" in today_todo (if you can)' || accumulate_error 'Did not confirm anything' # TODO: TEST
    exit_if_day_is_over

    today_todo -n | grep --color=auto '\(NOW\|LATER\|--------\|^$\)' # EASY TODO^84: EXTRACT, and REUSE
    firstlife-delegate --with-reward 'See if you can work on something "NOW" that is marked "LATER" (or vise-versa) in today_todo' || accumulate_error 'Did not maintain NOW and LATER tags'
    exit_if_day_is_over

done

################################################################################

shellask "Catch up on communicating with people" && firstlife-reward || accumulate_error "Did not communicate"
exit_if_day_is_over

pushd $SKIGGETY_UTILS_DIR
git add -p
shellask "Commit some code" && firstlife-reward || accumulate_error "Did not commit"
popd
exit_if_day_is_over

shellask "Close a 2-4 browser tabs unless they are reasonable already" && firstlife-reward || accumulate_error "Did not clean up browser tabs"
exit_if_day_is_over

shellask "Close a couple unecessary terminals, if any" && firstlife-reward || accumulate_error "Did not clean up terminals" # TODO^2: DELETE once firstlife behaves better
exit_if_day_is_over

shellask 'Put a few things away' && firstlife-reward || accumulate_error 'did not put things away'
exit_if_day_is_over

if [ -n "$SKIGGETY_UTILS_DIR" ] && [ -d "$SKIGGETY_UTILS_DIR" ]; then
    pushd $SKIGGETY_UTILS_DIR
    todo | grep --color=always '\(firstlife\|--------\|^$\)'
    firstlife-delegate --with-reward "Vote up a TODO in firstlife unless firstlife is working great already" || accumulate_error "not voting for firstlife features" # IGNORE_TODO
    popd
fi

firstlife-break

today_todo -n | grep --color=always '\(FUN\|EASY\|--------\|^$\)'
firstlife-delegate --with-reward "work on something FUN/EASY (is enough stuff tagged? --run \"today_todo -n | grep '\\(FUN\\|EASY\\)'\")"

clear

exit_with_any_accumulated_errors
