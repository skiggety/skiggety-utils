#!/usr/bin/env bash

# TODO^102: shorten this routine so it doesn't take so long

# Use this script as a basis for your personal multitasking routine, uncommenting what's useful without making it too
# complicated.  This is a very loose example, feel free to rearrange and comment/uncomment stuff, usually a paragraph at
# a time.

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'
. $SKIGGETY_UTILS_DIR/lib/today_todo.bash || exit_with_error 'could not include today_todo.bash'
. $SKIGGETY_UTILS_DIR/lib/vital.bash || exit_with_error 'could not include vital.bash'

firstlife_preempt_same_script

firstlife-wait-for-routine 'firstlife-morning' # TODO: || exit_with_error "..."
firstlife_exit_if_needed

passes_at_todo_list=1
FIRSTLIFE_MULTITASKING_COUNT=${FIRSTLIFE_MULTITASKING_COUNT:-4} # TODO: make this overridable in firstlife config template

export today_todo_now_max_count="$FIRSTLIFE_MULTITASKING_COUNT"

####################################################################################################

# TODO^81: firstlife should keep an eye on "MAINTENANCE" tag in vital/today_todo

firstlife_exit_if_needed

zl-delegate --limit-n-times-per-x 1 day 'Update yesterday in the habit tracker' || accumulate_error 'did not update yesterday in the habit tracker'
firstlife_exit_if_needed

zl-delegate --with-reward 'Make sure various devices including this one are charged/charging' \
    || accumulate_error 'should have charged your devices' # TODO: don't ask more than once every 3 hours
firstlife_exit_if_needed

zl-delegate 'put away any temptations or distractions' && firstlife-reward || accumulate_error 'did not clear distractions'
zl-delegate 'keep the tunes pumping (you can use "firstlife-music")' || accumulate_error 'did not DJ for yourself'
firstlife_exit_if_needed

zl-delegate 'do one act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
firstlife_exit_if_needed

zl-break -t 150

pushd $VITAL_DIR >/dev/null
# EASY TODO^84: EXTRACT, and REUSE:
todo -n | grep --color=always '\(NOW\|LATER\|--------\|^$\)'
popd >/dev/null
zl-delegate --limit-n-times-per-x 10 day --with-reward 'See if you can mark something something "NOW" that is marked "LATER" (or vise-versa) in vital' || accumulate_error 'Did not maintain NOW and LATER tags'
firstlife_exit_if_needed

#### Today's Todo List #############################################################################
# EASY TODO^85: maybe the inside of the loop could be more like merely:
# EASY TODO^85:     today_todo
# EASY TODO^85:     # zl-delegate --limit-n-times-per-x 10 day 'work on your one of your top 3 todos and downvote it if appropriate'
# EASY TODO^86:     vital --iterate -n $FIRSTLIFE_MULTITASKING_COUNT
#### Today's Todo List #############################################################################
for num in $(seq $passes_at_todo_list); do

    zl-delegate --limit-n-times-per-x 15 day 'Handle 1 important item from from any paper lists (if any), possibly by putting it into today_todo' && firstlife-reward || accumulate_error 'ignored paper todo list'
    firstlife_exit_if_needed

    # TODO^14: only do this if you haven't yet cleared them all today yet:
    open 'https://www.google.com/calendar/render' # EASY TODO^87: script extract
    zl-delegate --limit-n-times-per-x 10 day 'Take care of a calendar task, maybe by putting it into today_todo' && firstlife-reward || accumulate_error 'ignored paper todo list'
    firstlife_exit_if_needed

    vital-list-by-tag NOW
    vital-list-by-tag POINT
    zl-delegate --limit-n-times-per-x 3 day 'Run "vital" again to tag or upvote something worth productivity POINTS' || \
        accumulate_error 'did not get focus on the important stuff'
    firstlife_exit_if_needed

    vital-list-by-tag CONFIRMING
    zl-delegate --limit-n-times-per-x 5 day --with-reward 'Mark something DONE that is "CONFIRMING" in today_todo (if you can)' || accumulate_error 'Did not confirm anything'
    firstlife_exit_if_needed

    pushd $VITAL_DIR >/dev/null
    # EASY TODO^84: EXTRACT, and REUSE:
    todo -n | grep --color=always '\(NOW\|LATER\|--------\|^$\)'
    popd >/dev/null
    zl-delegate --limit-n-times-per-x 10 day --with-reward 'See if you can mark something something "NOW" that is marked "LATER" (or vise-versa) in vital' || accumulate_error 'Did not maintain NOW and LATER tags'
    firstlife_exit_if_needed

    today_todo --non-interactive
    zl-delegate 'Run "vital" once or twice to make sure you are ready to focus on the right stuff' || \
        accumulate_error 'did not get tasks organized'
    firstlife_exit_if_needed

    today_todo --non-interactive
    zl-delegate 'Run "vital" once to vote/sort/groom a bit from the bottom up' || \
        accumulate_error 'did not get tasks organized'
    firstlife_exit_if_needed

    zl-check-calendar || accumulate_error 'did not check calendar'
    firstlife_exit_if_needed

    # TODO^88: extract this bit that works on a few todos to firstlife-work-on-top-n-todos -n $MULTITASKING_CONSTANT
    # - TODO^91: or better yet, EXTRACT to 'firstlife-iterate-on-vital'
    pushd $VITAL_DIR > /dev/null
    todos="$($SKIGGETY_UTILS_DIR/bin/todo|grep '\(NOW\|EASY\)'|tail -n $FIRSTLIFE_MULTITASKING_COUNT|tac)" # lump "EASY" in with "NOW", might as well do easy stuff right away
    ORIGINAL_IFS="$IFS"
    IFS=$'\n'
    read -rd '' -a todos_as_array <<<"$todos"
    debug_here "echo \${todos_as_array} contains"
    for todo_line in ${todos_as_array[@]};do # EASY TODO^21: use pomodoro instead, for much increased focus
        zl-delegate --limit-n-times-per-x 3 day "Work on this task (and downvote or mark done using today_todo):${newline}${todo_line}" && \
            firstlife-reward || \
            accumulate_error "Didn't work on todo: $todo_line"
        firstlife_exit_if_needed

        # EASY TODO^75: loop through known tags:
        # EASY TODO^89: something like this needs to happen actually before you do the task:
        if echo $todo_line | grep ERRAND >/dev/null; then
            today_todo -n | grep ERRAND
            zl-delegate --limit-n-times-per-x 2 day --with-reward "Maybe handle some other errands"
        fi
        if echo $todo_line | grep PURCHASE >/dev/null; then
            today_todo -n | grep PURCHASE
            zl-delegate --limit-n-times-per-x 2 day --with-reward "Maybe handle some other purchases"
        fi
        firstlife_exit_if_needed

        zl-break -t 120

        firstlife_exit_if_needed
    done
    IFS="$ORIGINAL_IFS"
    popd > /dev/null

    zl-delegate 'Do one act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
    firstlife_exit_if_needed

    zl-check-calendar || accumulate_error 'did not check calendar'
    firstlife_exit_if_needed

    firstlife-check-email --with-reward || accumulate_error 'ignored email'
    firstlife_exit_if_needed

    if $FIRSTLIFE_DEVELOPMENT_MODE; then
        pushd $SKIGGETY_UTILS_DIR > /dev/null
        PWD_BIN/dashboard
        clean-up-su-local-changes
        PWD_BIN/dashboard
        popd > /dev/null
    fi
    firstlife_exit_if_needed

    zl-break -t 240
    firstlife_exit_if_needed

    zl-delegate 'Do one act of self care or something on the habit tracker' && firstlife-reward || accumulate_error 'missed a habit'
    firstlife_exit_if_needed

    # TODO^86: if you have not finished all dishes at least once today
    zl-delegate --limit-n-times-per-x 20 day --with-reward 'Put away at least 2 dry dishes (if needed)' || accumulate_error 'Did not put away dishes'
    firstlife_exit_if_needed

    zl-delegate --limit-n-times-per-x 10 day --with-reward 'Wash at least 1 dish' || accumulate_error 'Did not wash a dish'
    firstlife_exit_if_needed

    firstlife-check-email --with-reward || accumulate_error 'ignored email'
    firstlife_exit_if_needed

done

################################################################################

zl-delegate --limit-n-times-per-x 5 day "Catch up on communicating with people" && firstlife-reward || accumulate_error "Did not communicate"
firstlife_exit_if_needed

if $FIRSTLIFE_DEVELOPMENT_MODE; then
    pushd $SKIGGETY_UTILS_DIR
    zl-delegate "Commit some code" && firstlife-reward || accumulate_error "Did not commit"
    popd
fi
firstlife_exit_if_needed

zl-delegate --limit-n-times-per-x 15 day "Close a 2-4 browser tabs unless they are reasonable already" && firstlife-reward || accumulate_error "Did not clean up browser tabs"
firstlife_exit_if_needed

zl-break
firstlife_exit_if_needed

for tag in FUN EASY;do vital-list-by-tag $tag | abbreviate -l 12 -d -t "vital-list-by-tag $tag";done
zl-delegate --limit-n-times-per-x 5 day --with-reward "Work on something FUN/EASY (is enough stuff tagged? --run \"today_todo -n | grep '\\(FUN\\|EASY\\)'\")"

# call firstlife-morning again just in case it hasn't been done, since it only needs to be done once:
firstlife-morning || accumulate_error 'Morning routine had errors'
firstlife_exit_if_needed

exit_with_any_accumulated_errors
