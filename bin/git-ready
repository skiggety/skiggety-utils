#!/usr/bin/env bash

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash

function main {
    while [[ "$1" == -* ]]; do
        # accept -n for git commit -n
        if [ "$1" == "-n" ]; then
            GIT_COMMIT_OPTIONS="$GIT_COMMIT_OPTIONS $1"
            shift
        else
            exit_with_error "option not supported: $1"
        fi
    done

    run-or-fail git add -p

    # TODO^4: just exit 0 right here unless there are changes staged

    shellask "Are your changes what you want? (use 'git diff --staged' or 'git vimdiff --staged')" || \
        exit_with_error "Prepare your changes the way you want and then try $(basename $0) again."

    echo
    hesitate-and-run-or-fail git commit $GIT_COMMIT_OPTIONS

    # TODO: just exit 0 right here unless there are changes staged (yes, we're checking again because the user might
    # have changed something during shellask

    # TODO^3: if the remote branch doesn't exist yet, we should skip trying git pull, since it will fail anyway
    echo
    git pull

    echo
    hesitate-and-run-or-fail git push -u

    echo
    git -c color.ui=always --no-pager log --oneline --decorate=short origin/HEAD~~..HEAD -n 3

    echo
    echo "...finished '$(basename "$0")'."
}

# TODO^2: move/reuse?
function run-or-fail {
   $@ || exit_with_error "Command \"$@\" FAILED"
}

# TODO^2: move/reuse?
function hesitate-and-run-or-fail {
   hesitate-and-run $@ || exit_with_error "Command \"$@\" FAILED"
}

main "$@"
