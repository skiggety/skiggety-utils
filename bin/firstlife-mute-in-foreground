#!/usr/bin/env bash

# This script mutes all firstlife sounds for a certain duration (in the foreground).

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'

SKIGGETY_DEBUG=true # TODO^2: DELETE

trap 'if [ -f $FIRSTLIFE_MUTE_FILE ]; then rm -f $FIRSTLIFE_MUTE_FILE; fi;exit_with_error "mute interrupted, command was: \"$(basename $0) $@\""' INT # make sure to clean up after yourself...

MY_PID="$$"
debug_eval_here MY_PID

DURATION_IN_SECONDS="300"
debug_eval_here DURATION_IN_SECONDS
WITH_COUNTDOWN=''
while [[ "$1" == -* ]]; do
    if [ "$1" == '-t' -o "$1" == '--time-in-seconds' ]; then
        shift
        DURATION_IN_SECONDS="$1"
        debug_eval_here DURATION_IN_SECONDS
        shift
    elif [ "$1" == '--with-countdown' -o "$1" == '--time-in-seconds' ]; then
        WITH_COUNTDOWN="$1"
        shift
    fi
done

REASON="$@" # accept other argument as a message

echo
echo "MUTING for $DURATION_IN_SECONDS seconds because: '$REASON'"
echo

# TODO^3?: kill any zl-single-alarm process trees, mplayers called by firstlife-status, etc.  How best to keep
# track of them all?

# write pid in mute file
debug_eval_here FIRSTLIFE_MUTE_FILE_PREFIX
debug_eval_here MY_PID
FIRSTLIFE_MUTE_FILE="${FIRSTLIFE_MUTE_FILE_PREFIX}${MY_PID}"
debug_eval_here FIRSTLIFE_MUTE_FILE
echo "${MY_PID}:${REASON} (for $DURATION_IN_SECONDS seconds starting at $(date))" > $FIRSTLIFE_MUTE_FILE # TODO^6: should I put the reason in there too so we can show it in firstlife-status?

debug_eval_here DURATION_IN_SECONDS
sleep-verbose $WITH_COUNTDOWN $DURATION_IN_SECONDS

# Un-mute at the end by deleting mute file if this is the last process to mute:
if [ -f $FIRSTLIFE_MUTE_FILE ]; then
    zl-log "End of mute period for process $MY_PID, deleting '$FIRSTLIFE_MUTE_FILE'."
    rm -f $FIRSTLIFE_MUTE_FILE
fi
