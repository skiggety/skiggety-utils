#!/usr/bin/env ruby

# This program displays output of a given command and refreshes periodically.
# By default, the delay is dynamic so you don't use up too many resources when
# nothing is changing but it is responsive when the output is changing.

# For example, lets say you want to grep your text files for trailing spaces,
# you could do so with the command 'grep -RI " $" .', but it might be nice to
# keep running that command and updating a terminal with fresh output while you
# eliminate the trailing spaces in another terminal. In that case, prepend
# "review" to the command to get 'review grep -RI " $" .'. The grep will run
# repeatedly you stop it, waiting a few seconds in between each run (this time
# will adjust automatically.

class ReviewProgram

  def self.run
    self.new.run
  end

  def run
    $interactive = ! ARGV.delete('--non-interactive')

    command = ARGV.map{|a| "\"#{a}\""}.join(' ')

    delay = 1

    system(command)
    show_time

    last_output = output = ''
    while system("pretty_sleep #{delay}") # TODO TODO TODO TODO: pretty_sleep should not display a newline
      last_output = output
      non_interactive_command = "script -q /dev/null #{command} 2>&1"
      output = `#{non_interactive_command}`

      system('clear')
      puts output
      show_time

      change_detected = true
      if ( output == last_output )
        change_detected = false
      end
      delay = adjust_delay(delay,change_detected)
    end

  end

  def adjust_delay(delay,change_detected)
    if change_detected
      result = 1
    else
      result = ( 1.02 * delay).floor + 1
    end
    return result
  end

  def show_time
    system("echo_divider_with_text \"#\" \"...shown at $(date)\"")
  end

end

ReviewProgram.run
