#!/usr/bin/env bash
# TODO^4: rename? ("todo-today"?, "todoy"
# TODO: flag to grep for and count a specific word, sort of like what I do for "NOW"
# TODO: "-q" or "-n" flag to be quick, and skip the editor phase

# TODO: this program needs to display some instructions so the user knows how to use it.
# TODO: maybe during business hours, show results with "BUSINESS_HOURS" more prominently, and hide them otherwise

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1

isotoday="$(isotoday)"

todo_list_file_name="TODO.$isotoday.txt" # IGNORE_TODO
todo_list_dir_path="$HOME/$(basename $0)"

mkdir -p "$todo_list_dir_path"
cd "$todo_list_dir_path"

if [ -f "$todo_list_file_name" ]; then
    files_to_open="$todo_list_file_name"
else
    files_to_open="$todo_list_file_name ."
fi
echo "- TODO: ..." >> "$todo_list_file_name" # IGNORE_TODO
vim -o $files_to_open '+/\.\.\.'

EXCLUDE_DIR_ARGS="--exclude-dir archive"

echo "It's time to compact todo's in $0"
todo -wfq $EXCLUDE_DIR_ARGS
PAUSE_TO_READ=2
pretty_sleep $PAUSE_TO_READ
clear

# TODO: consider extracting the rest of this script to "today_todo_display", which can be overridden with PWD_BIN, or
# alternatively we could do like 'todo' and use flags to turn editing and reporting on and off:

echo "Last few todos DONE:"
todo -k DONE $EXCLUDE_DIR_ARGS | tail -n 3
pretty_sleep $PAUSE_TO_READ

todo_output="$(todo $EXCLUDE_DIR_ARGS)" # TODO: -n 5 # TODO^2: todo should accept an option for the number of lines. like "-n 3". Maybe if we pass an option in?

todo_count=$(( 0 + $(echo "$todo_output" | wc -l) ))
echo
echo "Found $todo_count todos, showing 10:"
echo "$todo_output" | tail -n 10
pretty_sleep $PAUSE_TO_READ

todo_later_output="$(echo "$todo_output" | grep LATER)"
todo_later_count=$(( 0 + $(echo "$todo_later_output" | wc -l) ))
pretty_sleep $PAUSE_TO_READ

todo_prog_output="$(echo "$todo_output" | grep IN_PROGRESS | grep -v LATER)"
todo_prog_count=$(( 0 + $(echo "$todo_prog_output" | wc -l) ))
echo
echo "Found $todo_prog_count todos IN_PROGRESS:"
echo "$todo_prog_output"
pretty_sleep $PAUSE_TO_READ

# TODO^4: add NOW count to graph:
# TODO^2: NOW output should be highlighted.
todo_now_output="$(echo "$todo_output" | grep --color=always NOW)"
todo_now_count=$(( 0 + $(echo "$todo_now_output" | wc -l) ))
if [ "$todo_now_output" != "" ]; then
    if (( $todo_now_count > 3 )); then
        only_showing=", only showing 3"
    else
        only_showing=''
    fi

    echo
    echo "Found $todo_now_count todos to do right NOW$only_showing:" | grep --color=always \\d
    echo "$todo_now_output" | tail -n 3
fi

# TODO^3: add NOW count to this output?:
echo "$(( $todo_count + $todo_prog_count )) combined score, $todo_prog_count todos IN_PROGRESS"

# graph how many are done each day
# TODO: what date format should I use?:
echo "$isotoday,$todo_count,$todo_prog_count,$todo_later_count,$(( $todo_count + $todo_prog_count ))" >> graph.csv
