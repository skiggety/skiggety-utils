#!/usr/bin/env bash

# This program uses shellask to prompt you to do a tolerable mix of productive stuff. meant for running repeatedly.

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'

# TODO^2?: exit if a script with identical name and path is in parent tree

exit_if_day_is_over # EASY to chip away at TODO^84: infect this and called scripts with this line all over the place to clean up windows (for ORGANIZATION)

################################################################################
# EASY TODO^94: normalize scripts with names like:
# - firstlife-multitask (EASY TODO^86: run firstlife-multitask to diff and do some naming normalization)
#   - firstlife-multitask.routine.<username>
#   - firstlife-multitask.routine.TEMPLATE

PERSONAL_ROUTINE_SCRIPT_NAME="$(personal_inner_routine_script_name $0)"
PERSONAL_ROUTINE_SCRIPT="$(personal_inner_routine_script $0)"

TEMPLATE_ROUTINE_SCRIPT_NAME="$(template_inner_routine_script_name $0)"
TEMPLATE_ROUTINE_SCRIPT="$(template_inner_routine_script $0)"


mkdir -p "$FIRSTLIFE_BIN"
shellask "Let's check over $PERSONAL_ROUTINE_SCRIPT_NAME before running it, OK?" && vimdiff $PERSONAL_ROUTINE_SCRIPT $TEMPLATE_ROUTINE_SCRIPT
if [ -f $PERSONAL_ROUTINE_SCRIPT ]; then
    if shellask "Do you want to multitask now? (this will run '$PERSONAL_ROUTINE_SCRIPT')"; then
        chmod +x $PERSONAL_ROUTINE_SCRIPT
        $PERSONAL_ROUTINE_SCRIPT \
            || exit_with_error "$PERSONAL_ROUTINE_SCRIPT FAILED"
    fi
else
    exit_with_error "script '$PERSONAL_ROUTINE_SCRIPT' not found"
fi

exit
