#!/usr/bin/env bash

# Self, program thyself. This script gamifies life to help get everyday stuff done, and it's just a prototype.

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
SKIGGETY_DEBUG='true'

. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'
. $SKIGGETY_UTILS_DIR/lib/today_todo.bash || exit_with_error 'could not include today_todo.bash'

# TODO^88: ======== First real demo ================
# TODO^85: ======== Another real demo with some decent code readability ============
# TODO^74: if a second firstlife pops up, maybe it should take over and the old one gracefully exits? (PPID in a marker file?)
# - TODO^4: and I could take advantage of this to create a way to exit firstlife early without having to close the terminal
# TODO^43: and firstlife needs a way to keep you on pace, too
# TODO^31: track stats of all kinds

# EASY TODO^83: prompt user to back up ~/firstlife ( $FIRSTLIFE_DIR ) as part of setup/maintenance

# EASY TODO^86: help user start firstlife (including morning routine) with cron like I did, automate ensuring a line in local crontab, and use 'crontab-verbose'?
# - TODO^23 (IN_PROGRESS, NOW): it should set the terminal title

# EASY TODO^86: move elsewhere:
function update_todo_graph {
    # TODO^88: (IN_PROGRESS, EASY) make sure TODO graph exists in an environment variable so you don't commit it:
    # - TODO^89 (IN_PROGRESS, EASY): if there's no environment variable, suggest the user start a new one and save the link in their bashrc, where the template should be ready.
    open $TODAY_todo_DIR
    # TODO^3: do something with error count:
    firstlife-delegate --with-reward "check today_todo graph import $TODAY_todo_DIR/graph.csv with 'replace current sheet' by uploading" || accumulate_error "did not check today_todo graph"
}

# TODO: maybe wake only runs because the cron job calls firstlife --with-wake
firstlife-wake || accumulate-error "I am not sure you are awake"
exit_if_day_is_over

# EASY TODO^86: make sure you call firstlife-morning again later, maybe from firstlife-multitask. It should be a no-op if you've done it already, but catch you otherwise.
firstlife-morning || accumulate_error 'morning routine had errors'
exit_if_day_is_over

firstlife-daily || accumulate_error 'did not complete DAILY tasks'

# TODO: exit_if_another_terminal_took_over
# - TODO: ultimately, combine for exit_if_another_terminal_or_day_took_over_with_accumulated_errors

# EASY TODO^87: use 'firstlife-delegate --with-reward' pretty much universally, instead of calling shellask directly

# TODO^60: make this program aware of your productivity points, as in, keep going until you have enough:
firstlife-work # TODO^2?: || exit_with_error "firstlife-work FAILED"

# EASY TODO^43: (TEST) help with evening routine (maybe only use exit_if_day_is_over in child scripts, or call this from inside # exit_if_day_is_over)
firstlife-evening || accumulate_error "need to wrap up habits in the evening"

# EASY TODO^3: every time I do this graph update should be in a routine like morning or evening so it can get skipped:
update_todo_graph # TODO: only if using today_todo

exit_with_any_accumulated_errors
