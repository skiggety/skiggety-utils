#!/usr/bin/env bash

# This script gamifies life to help get stuff done, and it's just a prototype.

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
SKIGGETY_DEBUG='true'

. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'
. $SKIGGETY_UTILS_DIR/lib/today_todo.bash || exit_with_error 'could not include today_todo.bash'

# TODO^31: track stats of all kinds
# TODO^43: and firstlife needs a way to keep you on pace, too
# TODO: if a second firstlife pops up, maybe it should take over and the old one gracefully exits?

# EASY TODO^83: prompt user to back up ~/firstlife ( $FIRSTLIFE_DIR ) as part of setup/maintenance

# TODO^24: help user start firstlife (including morning routine) with cron like I did, automate ensuring a line in local crontab, and use 'crontab-verbose'?
# - TODO^23 (IN_PROGRESS, NOW): it should set the terminal title

function update_todo_graph {
    # TODO^93 (IN_PROGRESS, EASY): make sure it exists in an environment variable so you don't commit it:
    open $TODAY_todo_DIR
    # TODO^3: do something with error count:
    firstlife-delegate --with-reward "check today_todo graph import $TODAY_todo_DIR/graph.csv with 'replace current sheet' by uploading" || accumulate_error "did not check today_todo graph"
}

# EASY TODO: extract into a script called firstlife-satisfy-alarmy so you can call it later if you start the program
# early:
# Show an image for your alarm to match to, first thing:
function handle-alarm-mission {
  shellask "Please fullscreen this terminal window if you have an alarm to satisfy, otherwise say 'nope'" || return 0
  echo '|<--------125-characters-wide---------------------------------------------------------------------------------------------->|'
  shellask "use CTRL-plus/minus to change font size so the bar above just barely fits"
  echo '*==========================================================*'
  echo '|----------------------------------------------------------|'
  echo '|----------------------------------------------------------|'
  echo '|------*==========================*------------------------|'
  echo '|------|                          |------------------------|'
  echo '|------|  Please Photograph this  |------------------------|'
  echo '|------|  (outer) box, not        |------------------------|'
  echo '|------|  including anything      |------------------------|'
  echo '|------|  outside the box, to     |------------------------|'
  echo '|------|  satisfy your alarmy     |------------------------|'
  echo '|------|  mission.                |------------------------|'
  echo '|------|                          |------------------------|'
  echo '|------|==========================|------------------------|'
  echo '|----------------------------------------------------------|'
  echo '|----------------------------------------------------------|'
  echo '|----------------------------------------------------------|'
  echo '*==========================================================*'
  firstlife-delegate --with-reward "take a photo of this screen to satisfy your alarmy mission" || return 1
  shellask 'un-fullscreen and/or resize window as you please'
  return 0
}

# TODO^36: alert user with sound, queue videos? mplayer? toaster-ding?
# - TODO^36: but first, bring terminal to the front, maybe just as part of firstlife-delegate, too
# - EASY TODO^58: I think i should play (with mplayer) an annoying sound for a minute, in a 3 minute loop, until I shut it up, called firstlife-alarm
#   - TODO: make sure volume is up

handle-alarm-mission || accumulate_error "failed to handle alarm" # for 'Alarmy'

# EASY TODO^87: this is where you should call firstlife-morning, which should call the inner routine ('firstlife-morning-routine' currently) and then update_todo_graph
# TODO: make sure you call firstlife-morning again later, maybe from firstlife-multitask. It should be a no-op if you've done it already, but catch you otherwise.
shellask "Do you want to do your morning routine now?" && firstlife-morning-routine || accumulate_error "morning routine had errors" # TODO: error checking

exit_if_day_is_over

# TODO^86: instead, loop through "firstlife-multitask" for as long as it's still today.

# EASY TODO^86: use 'firstlife-delegate --with-reward' pretty much universally, instead of calling shellask directly

# TODO^58: make this program aware of your productivity points, as in, keep going until you have enough:
firstlife-work # TODO^2?: || exit_with_error "firstlife-work FAILED"

# EASY TODO^43: (TEST) help with evening routine (maybe only use exit_if_day_is_over in child scripts, or call this from inside # exit_if_day_is_over)
firstlife-evening || accumulate_error "need to wrap up habits in the evening"

# EASY TODO^3: every time I do this graph update should be in a routine like morning or evening so it can get skipped:
update_todo_graph
