#!/usr/bin/env bash

# Self, program thyself.  This script gamifies life to help get everyday stuff done, and it's just a prototype.

# TODO^199: can I alias 'y' and 'n'?

# TODO^15: figure out uniform short flags for '--time-in-minutes', '--time-in-seconds', and '--message'. '-m' and '-t', aren't enough, so consider '-s' too, maybe. figure it out and make it uniform.

# EASY TODO^11 crontab mutes for overnight, at least until 5am

# FUN TODO^5: firstlife could make a habit of telling you what the routine is and recommending changing terminal colors
# at the beginning of a routine or something else that cron'ed

# TODO: can I simplify the firstlife-related lines in ~/.crontab by extracting the boilerplate?

firstlife-setup || accumulate_error "firstlife-setup FAILED"
# TODO^113: everything after firstlife-setup should be moved elsewhere after firstlife-setup generates a sample crontab and guide you through setting it up to call the other routines

# TODO^93: TEST this in docker as a reluctant user starting from fish

# TODO^5: replace many instances of 'sleep-verbose X' with 'firstlife-mute-in-foreground -t X REASON' to allow you to earn some  quiet sometimes

# Figure out $SKIGGETY_UTILS_DIR and export it if it's not set, in case skiggety-utils setup has not happened:
THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
SKIGGETY_UTILS_DIR=${SKIGGETY_UTILS_DIR:-"$(cd $THIS_DIR/..;pwd)"}
export SKIGGETY_UTILS_DIR

# EASY TODO^5: archive markers and log files more than a month old

if ! echo $PATH | grep "$SKIGGETY_UTILS_DIR/bin" >/dev/null; then
    export PATH="$SKIGGETY_UTILS_DIR/bin:$PATH"
fi

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/firstlife.bash || exit_with_error 'could not use common firstlife code'
. $SKIGGETY_UTILS_DIR/lib/today_todo.bash || exit_with_error 'could not include today_todo.bash'

# TODO^88: ======== First real demo ================
# TODO^85: ======== Another real demo with some decent code readability ============
# - TODO^4: and I could take advantage of this to create a way to exit firstlife early without having to close the terminal
# TODO^104: and firstlife needs a way to keep you on pace, too
# TODO^56: firstlife should do something different on weekends, sundays, any sabbath of choice, letting you control it with a template
# TODO^33: routinely check if it's time to jump to evening stuff, based on how much you did (rewards and productivity points)
# TODO^31: track stats of all kinds

# TODO^23: this script should set the terminal title

$SKIGGETY_UTILS_DIR/installers/firstlife || exit_with_error "could not set up firstlife"

# to make sure firstlife has the latest code:
if shellask "Would you like to update skiggety-utils (including firstlife) now?"; then
    pushd $SKIGGETY_UTILS_DIR > /dev/null
    ./PWD_BIN/git-safe-pull
    popd > /dev/null
fi
exit_if_day_is_over

# EASY TODO^83: prompt user to back up ~/firstlife ( $FIRSTLIFE_DIR ) as part of setup/maintenance

# TODO^21: exit_if_another_terminal_took_over
# - TODO: ultimately, combine for exit_if_another_terminal_or_day_took_over_with_accumulated_errors

# # TODO^63: make this program aware of your productivity points, as in, keep going until you have enough:
# firstlife-work || accumulate_error "firstlife-work had ERRORS"
# exit_if_day_is_over

exit_with_any_accumulated_errors
