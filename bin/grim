#!/usr/bin/env bash

# TODO^2: make this (and others like it) a printable help message:
# This script, "grim" is GRep into vIM. It is a handy way to find instances of a keyword (with grep) across a directory
# tree, and then open those files at the right location with vim. For example, if you run "grim someuniquegobbledygook"
# from within your $SKIGGETY_UTILS_DIR, it should bring you right here.

THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
. $THIS_DIR/../lib/skiggety-utils.bash || exit 1

# TODO^5: consider setting this program up to use rg instead of grep, maybe optionally, because it would be so much faster

VIM_OPTIONS="-on"
GREP_OPTIONS="-RlI -D skip"
VIM_SEARCH_STRING_SUFFIX=""

while [[ "$1" == -* ]]; do
    # accept a -i option for case insensitive grep
    if [ "$1" == "-i" ]; then
        GREP_OPTIONS="$GREP_OPTIONS $1"
        VIM_SEARCH_STRING_SUFFIX="\c"
        shift
    elif [[ "$1" == --exclude* ]]; then
        echo_debug "running grep with option: $1 $2"
        GREP_OPTIONS="$GREP_OPTIONS $1 $2"
        shift
        shift
    else
        echo "ERROR: option not supported: $1" >&2
        echo "TODO: IMPLEMENT more passthrough options for vim or grep?" >&2; exit 1
    fi
done

if [ -z "$*" ];then
    echo "ERROR: no arguments passed to $(basename $0)" >&2
    exit 1
fi

GRIM_TARGET_STRING="$1"; shift

# TODO: DELETE?
if ! [ -z "$*" ]; then
    echo "ERROR: no flags allowed after search string"
    exit 1
fi

# don't open vim swap files
GRIM_FILES=`grep $GREP_OPTIONS "$GRIM_TARGET_STRING" .|grep -v .swp\$`

# TODO: Maybe other arguments passed in can be sent to vim, so you can to gvim or -O
# TODO: what if a regex gets passed in? can you get the same one to work for grep and vim?
if [ -z "$GRIM_FILES" ]; then
    echo No files to open!
else

    vim $VIM_OPTIONS $GRIM_FILES +/"$GRIM_TARGET_STRING$VIM_SEARCH_STRING_SUFFIX" # TODO^2: support readonly vim mode by passing a "-R" flag if this program recieves a "-R"
    echo_debug "ran: vim $VIM_OPTIONS $GRIM_FILES +/\"$GRIM_TARGET_STRING$VIM_SEARCH_STRING_SUFFIX\""
fi
