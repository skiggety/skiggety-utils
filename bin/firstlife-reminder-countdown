#!/usr/bin/env bash

# This script reminds you of future events, more frequently as they get closer.


. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1

MINUTES_LEFT="15"
debug_eval_here MINUTES_LEFT
TITLE="Do what's on your calendar"

while [[ "$1" == -* ]]; do
    # TODO: don't use "-m" for minutes, it's too confusing since git and other skiggety utils use it to pass a message:
    if [ "$1" == "-m" ]; then
        shift
        MINUTES_LEFT="$1"
        debug_eval_here MINUTES_LEFT
        shift
    fi
done
TITLE="$*"

# TODO: display minutes as H:MM, by putting a conversion function in skiggety-utils.bash

TIME_MARKER_FILE="/tmp/$(basename $0).$PPID.marked.time"

echo "$MINUTES_LEFT minutes until '$TITLE' at $(date)"
debug_eval_here MINUTES_LEFT
while [ $MINUTES_LEFT -gt 0 ];do
    debug_eval_here MINUTES_LEFT
    LAST_TIME_MINUTES_LEFT="$MINUTES_LEFT"
    MINUTES_LEFT="$(( ($MINUTES_LEFT * 40) / 100 ))"
    if [[ "$MINUTES_LEFT" == -* ]]; then
        MINUTES_LEFT=0
    fi
    MINUTES_TO_SLEEP="$(( $LAST_TIME_MINUTES_LEFT - $MINUTES_LEFT))"

    echo "Sleeping for $MINUTES_TO_SLEEP minutes at $(date) ..."
    debug_here sleep-verbose --with-countdown "$(( $MINUTES_TO_SLEEP * 60 ))"
    sleep-verbose --with-countdown "$(( $MINUTES_TO_SLEEP * 60 ))"

    touch "$TIME_MARKER_FILE"
    debug_eval_here MINUTES_LEFT
    firstlife-alarm "$MINUTES_LEFT minutes until '$TITLE' at $(date)"
    debug_eval_here MINUTES_LEFT

    # TODO: for linux:
    # # ALARM_ELAPSED_SECONDS="$(($(date +%s) - $(date +%s -r "$TIME_MARKER_FILE")))"

    # TODO: only for OSX:
    ALARM_ELAPSED_SECONDS="$(($(date +%s) - $(stat -t %s -f %m -- "$TIME_MARKER_FILE")))"
    debug_eval_here ALARM_ELAPSED_SECONDS

    MINUTES_TO_SUBTRACT_FOR_ALARM="$(( ($ALARM_ELAPSED_SECONDS + 60 ) / 60 ))"
    MINUTES_LEFT="$(( $MINUTES_LEFT - $MINUTES_TO_SUBTRACT_FOR_ALARM ))"
    debug_eval_here MINUTES_LEFT
    if [ $MINUTES_LEFT -ge 0 ]; then
        MISSING_SECONDS="$(( 60 - ( $ALARM_ELAPSED_SECONDS % 60 ) ))"
        debug_eval_here MISSING_SECONDS
        sleep-verbose "$(( 60 - $ALARM_ELAPSED_SECONDS))"
    fi
    echo "$MINUTES_LEFT minutes until '$TITLE' at $(date)"
    debug_eval_here MINUTES_LEFT
done

firstlife-alarm "Time for '$TITLE' NOW!"
echo_divider_with_text "=" "Time for '$TITLE' NOW!"

exit 0
