#!/usr/bin/env bash

# Just a fast way to start editing a new script

# TODO: DRY functionality with vimwhich, there is or at least should be some overlap.  Maybe vimwhich should call newbin
# if it doesn't find the right script?

. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1

# TODO^10?: maybe you could configure in which bin directory new scripts end up in, or at least do an EASY HACK to throw zl-* in the right place

if [ "$1" == "$(basename $1)" ];then
    if which "$1" > /dev/null; then
        new_file="$(which "$1")"
    else
        new_file="$SKIGGETY_UTILS_DIR/bin/$1"
    fi
else
    new_file="$1"
fi
debug_eval new_file
shift

if [ x"$@"x == x""x ]; then
    debug_here
    shebang_args="env bash"
else
    debug_here
    shebang_args="$@"
fi

if ! [ -f $new_file ]; then
    debug_eval_here shebang_args

    # TODO: frozen string literal thingy if ruby

    if [ "$shebang_args" == 'env bash' ];then
        debug_here
        TEMPLATE="$SKIGGETY_UTILS_DIR/bin/templates/newbin.template.bash"
        sed 's/ooo//g' "$TEMPLATE" > $new_file
        debug_here
    fi

    chmod +x $new_file

fi

$EDITOR $new_file
chmod +x $new_file
