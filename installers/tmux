#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/installable_skiggety_util'

class TmuxInstaller

  include InstallableSkiggetyUtil

  def apparently_installed?
    system('which tmux')
  end

  def install!
    if on_mac_os?
      brew_install_latest 'tmux'
    elsif apt_available?
      if in_docker_demo?
        assert_system('apt install -y tmux')
      elsif $interactive
        assert_system('sudo apt install tmux')
      else
        raise_interactive_only_install
      end
    else
      raise 'TODO: IMPLEMENT'
    end
  end

  # err on the side of returning false...if these files don't match perfectly
  # the user will have a chance to make sure it's set up right.
  def apparently_configured?
    return false unless File.exist?(user_tmux_conf_path)

    FileUtils.compare_file(user_tmux_conf_path, template_tmux_conf_path) or
      ask_user 'Have you confirmed that your tmux.conf is good enough?'
  end

  def configure!
    if $interactive
      assert_system("vim -d #{user_tmux_conf_path} #{template_tmux_conf_path}")
    else
      raise_interactive_only_configuration
    end
  end

  def user_tmux_conf_path
    @user_tmux_conf_path ||= File.expand_path('~/.tmux.conf')
  end

  def template_tmux_conf_path
    self_config_path('tmux.conf')
  end

end

TmuxInstaller.run
