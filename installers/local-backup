#!/usr/bin/env ruby

require_relative '../lib/installable_skiggety_util.rb'

class LocalBackupSetterUpper

  include InstallableSkiggetyUtil

  def self.run # TODO: extract to InstallableSkiggetyUtil
    self.new.run
  end

  def apparently_installed?
    if on_mac_os?
      tmutil_version = `tmutil --version `
      return (tmutil_version =~ / 4\.0\.0 / ).is_a?(Numeric) # TODO: update desired vim version and make sure it includes the gui version, too
    else
      raise NotImplementedError
    end
  end

  # TODO: make sure there was a backup in the last week?
  def apparently_configured?
    if on_mac_os?
      backup_done_indicator = `tmutil status|grep Percent`
      return (backup_done_indicator =~ /Percent = 1;/ ).is_a?(Numeric).to_s
    else
      raise NotImplementedError
    end
  end

  def install
    if on_mac_os?
      if $interactive
        delegate_to_user 'make sure Time Machine is installed'
      else
        raise "Cannot install Time Machine in non-interactive mode, user should run \"install_me\" or \"#{__FILE__}\"."
      end
    else
      raise NotImplementedError, "TODO: implement this for this OS"
    end
  end

  def configure
    if on_mac_os?
      if $interactive
        system("open /System/Library/PreferencePanes/TimeMachine.prefPane")
        delegate_to_user 'set up time machine to make backups using the window that just opened automatically'
      else
        raise "Cannot configure Time Machine in non-interactive mode, user should run \"install_me\" or \"#{__FILE__}\"."
      end
    else
      raise NotImplementedError, "TODO: implement this for this OS"
    end
  end

end

LocalBackupSetterUpper.run
