#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/installable_skiggety_util'

# TODO TODO TODO: install and set up vimpager as your pager, but maybe not in this installer
# TODO TODO: install vim rake plugin with vim pathogen
# TODO: maybe detect local vimrc changes

class VimInstaller

  include InstallableSkiggetyUtil

  def apparently_installed?
    program_version_option_output_matches?('vim', / 8\.0 /)
  end

  # err on the side of returning false...if these files don't match perfectly
  # the user will have a chance to make sure it's set up right.
  def apparently_configured?
    return false unless File.exist?(user_vimrc_path)

    FileUtils.compare_file(user_vimrc_path, template_vimrc_path)
  end

  def install
    if $interactive
      delegate_to_user 'make sure vim is installed'
    else
      raise_interactive_only_install
    end

    brew_install_latest 'macvim' if on_mac_os?
    # TODO TODO: install gvim (gui) for linux

    # installing pathogen means we can install other plugins by dropping them in the "bundle" directory:
    FileUtils.mkdir_p "#{Dir.home}/.vim/autoload"
    puts `curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim`

    bundle_dir = "#{Dir.home}/.vim/bundle"
    FileUtils.mkdir_p bundle_dir

    git_clone_latest('https://github.com/tpope/vim-rails.git', "#{bundle_dir}/vim-rails")
    # TODO TODO: learn to use:
    git_clone_latest('https://github.com/preservim/nerdcommenter.git', "#{bundle_dir}/nerdcommenter")
    # TODO TODO TODO TODO TODO TODO: fzf
    # TODO TODO TODO TODO TODO: ripgrep
    # TODO: vim-ripgrep
    # TODO: nerdcommenter
    # TODO: nerdtree
  end

  # TODO: maybe move to installable_skiggety_util.rb:
  def git_clone_latest(repo, dir)
    assert_system("git clone #{repo} #{dir}") unless Dir.exist?(dir)
    Dir.chdir(dir) do
      assert_system('git pull')
    end
  end

  def configure
    if $interactive
      assert_system("vim -do #{user_vimrc_path} #{template_vimrc_path}")
    else
      raise_interactive_only_configuration
    end
  end

  def user_vimrc_path
    @user_vimrc_path ||= File.expand_path('~/.vimrc')
  end

  def template_vimrc_path
    self_config_path('vimrc')
  end

end

VimInstaller.run
