#!/usr/bin/env ruby
# frozen_string_literal: true

# Install just what's needed to work on the programs in here, without any skiggety-ish preferences inflicted on you.
# TODO: make sure there is a way to run this inside demo_in_docker and then to be able to run 'todo' or at least
# something like '/usr/local/bin/pyenv exec bin/todo' afterwards

require_relative '../lib/installable_skiggety_util'

class DevKitInstaller

  include InstallableSkiggetyUtil

  def apparently_installed?
    false # will mark installed manually, I think there's too many things to check on
  end

  def apparently_configured?
    false # will mark manually
  end

  def install!
    call_peer_installer('basic_prerequisites')
    call_peer_installer('todo')
    call_peer_installer('review')
    # TODO: call_peer_installer('shellcheck') if I start using it
    mark_installed!
  end

  def configure!
    FileUtils.copy(template_basic_pre_commit_hook_path, actual_basic_pre_commit_hook_path)
    FileUtils.copy(template_pre_commit_hook_path, actual_pre_commit_hook_path)
    mark_configured!
  end

  def template_pre_commit_hook_path
    self_config_path('pre-commit')
  end

  def actual_pre_commit_hook_path
    File.join(actual_pre_commit_hook_dir_path, 'pre-commit')
  end

  def template_basic_pre_commit_hook_path
    "#{actual_pre_commit_hook_path}.sample"
  end

  def actual_basic_pre_commit_hook_path
    "#{actual_pre_commit_hook_path}.basic"
  end

  def actual_pre_commit_hook_dir_path
    File.join(skiggety_utils_path, '.git/hooks')
  end

end

DevKitInstaller.run
