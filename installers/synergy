#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/installable_skiggety_util'

# TODO^2: The process of downloading and installing Rectangle, Synergy, and
# probably others like Alfred is so similar on (on mac at least), that I think
# I whould do some method extracting.

class SynergyInstaller

  include InstallableSkiggetyUtil

  def apparently_installed?
    if on_mac_os?
      # TODO: Checking the version would be a better approach if possible, I guess:
      Dir.exist?('/Applications/Synergy.app')
    elsif on_linux_os?
      system('which synergy')
    else
      raise NotImplementedError, 'TODO: implement this for this OS'
    end
  end

  def apparently_configured?
    # synergy server or client must be running:
    return false if `ps aux | grep #{ENV.fetch('USER', nil)} | grep synergy[sc]` == ''

    if $interactive
      ask_user "Is #{name} set up the way you want?"
    else
      # In non-interactive mode, assume config is needed to make sure the user
      # has a chance, since I can't think of a way to check if the current
      # config is the desired version:
      false
    end
  end

  def install!
    delegate_download_and_install_to_user('https://members.symless.com/download', 'Synergy')
  end

  def configure!
    call_peer_installer('hostname')
    if $interactive
      if on_mac_os?
        assert_system('open /Applications/Synergy.app')
      elsif on_linux_os?
        raise 'TODO: IMPLEMENT'
      else
        raise NotImplementedError, 'TODO: implement this for this OS'
      end
      delegate_to_user("Configure #{name} manually (it should be open), and make sure it works.")
    else
      raise_interactive_only_configuration
    end
  end

end

SynergyInstaller.run
