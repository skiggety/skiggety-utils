#!/usr/bin/env ruby

require_relative '../lib/installable_skiggety_util.rb'

# TODO: The process of downloading and installing Rectangle, Synergy, and probably others like Alfred is so similar on (on mac at least), that I think I whould do some method extracting.

class SynergyInstaller

  include InstallableSkiggetyUtil

  def self.run # TODO TODO TODO: EXTRACT to InstallableSkiggetyUtil
    self.new.run
  end

  def apparently_installed?
    if on_mac_os?
      return Dir.exist?("/Applications/Synergy.app") # TODO TODO TODO TODO: test this, it's only a stab in the dark right now. Checking the version would be a better approach if possible, I guess.
    elsif on_linux_os?
      return false # TODO TODO TODO TODO TODO: DELETE
      raise "TODO TODO TODO TODO: IMPLEMENT"
    else
      raise "TODO: IMPLEMENT"
    end
  end

  def apparently_configured?
    if `ps aux | grep #{ENV['USER']} | grep synergy[sc]` == '' # synergy server or client must be running
      return false
    else
      if $interactive
        return ask_user "Is #{name} set up the way you want?"
      else
        # In non-interactive mode, assume config is needed to make sure the user
        # has a chance, since I can't think of a way to check if the current
        # config is the desired version:
        return false
      end
    end
  end

  def install
    download_url = 'https://members.symless.com/download'
    if $interactive
      open_in_browser(download_url)
      delegate_to_user('Download/install Synergy manually. The download page should be open now.')
      # TODO TODO TODO TODO: should I specifically remind the user to have synergy start on startup or keep it in the dock? Should some of this be mac only?
    else
      raise_interactive_only_install
    end
  end

  def configure
    call_peer_installer('hostname')
    if $interactive
      if on_mac_os?
        system("open /Applications/Synergy.app")
      elsif on_linux_os?
        raise "TODO TODO TODO TODO: IMPLEMENT"
      else
        raise "TODO: IMPLEMENT"
      end
      delegate_to_user("Configure #{name} manually (it should be open), and make sure it works.")
    else
      raise_interactive_only_configuration
    end
  end

end

SynergyInstaller.run
