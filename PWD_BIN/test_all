#!/usr/bin/env bash

# This script runs tests this project as much as possible, and exits with an error if it fails.

THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
. $THIS_DIR/../lib/skiggety-utils.bash || exit 1

echo_divider_with_text "O-=======-" "test_all:"

build

# install skiggety-utils
echo_divider_with_text "+-=======-" "install-skiggety-utils --non-interactive"
$THIS_DIR/install-skiggety-utils --non-interactive || exit_with_error "could not run installers for skiggety-utils"

echo_divider_with_text "+-=======-" "run shell tests"
./test/test_todo.bash || accumulate_error "shell integration tests failed"

echo_divider_with_text "+-=======-" "ruby_setup"
{ $THIS_DIR/ruby_setup 2>&1 || echo FOO; } | tail -n 1 # in case this part gets skipped in installers/basic_prerequisites

# run ruby unit tests
echo_divider_with_text "+-=======-" "rake test"
rake_test_output="$(rake test)" || accumulate_error "rake test FAILED"
# trim blank space and anything non-deterministic out of test output:
echo "$rake_test_output" | grep -v " --seed" | grep -v "^Finished" | grep -v "^$"
# TODO TODO: what can I do to make coverage results be trustworthy and meaningful?
# TODO TODO: perhaps ratchet coverage results towards 100%, or make sure it clears a predefined minimum threshold

echo_divider_with_text "+-=======-" "run all python tests"
function run_all_python_tests {
    pushd $THIS_DIR/../test/python/integration/ > /dev/null
    test_output_text=$(python -m nose2 2>&1)
    test_exit_value="$?"

    echo "$test_output_text" | sed 's/ in [0-9.]*s//' # get rid of time report to keep output deterministic
    popd > /dev/null
    return $test_exit_value
}
run_all_python_tests || accumulate_error "Python tests failed" # TODO: run ALL python tests"

exit_if_any_accumulated_errors
