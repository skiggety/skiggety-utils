#!/usr/bin/env bash

THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
. $THIS_DIR/../lib/skiggety-utils.bash || exit 1

# This script installs skiggety-utils, and does all setup necessary to set up a workstation the way skiggety likes it. Some of this is automatic, and some of this will be delegated back to the user to do manually with guidance.

# TODO TODO: Rewrite this in ruby or python...we need to do some smart (...TODO?)

# TODO: install and configure 3rd party programs
    # TODO: install pocket
    # TODO TODO: install custom list app (opens dedicated browser window "as an app") (huh?)
    # TODO TODO: install a music player of some sort
    # TODO: install/config chrome tab scheduler and/or other stuff to enable a some kind of dashboard in a web browswer

function main {
    for arg in "$@"
    do
        shift
        case "$arg" in
            --non-interactive) set -- "$@" "-n" ;;
            *)                 set -- "$@" "$arg" ;;
        esac
    done

    # defaults
    interactive=true

    OPTIND=1
    while getopts ":inhi?" opt
    do
        case "$opt" in
            "i") interactive=true ;;
            "n") interactive=false ;;
            "h") exit_with_error "TODO: print usage" ;;
            "?") exit_with_error "TODO: print usage" ;;
            *) ;;
        esac
    done

    # TODO: get latest code (git pull)?

    local INSTALLER_ARGS=""
    if $interactive
    then
        INSTALLER_ARGS=""
    else
        INSTALLER_ARGS="--non-interactive"
    fi

    INSTALLERS_DIR="$THIS_DIR/../installers"

    for installer in "$INSTALLERS_DIR"/* # TODO: files only
    do
        if [ -f "$installer" ]; then

            # TODO: instead of exiting on error, note it and move on. $cumulative_exit_code might be handy
            use_installer "$installer" $INSTALLER_ARGS || accumulate_error "use_installer \"$installer\" FAILED ($(echo_here))"

            # configure "installer.config/" || exit_with_error "TODO" #  TODO: shoulcn't this be part of the installer?
            # TODO: make sure apps get configured properly, too, such as synergy, vim (incl vimrc), etc.
        fi
    done

    exit_with_any_accumulated_errors
}

# this function runs the installer, checks the exit code, prints context/formatting around it, perhaps remembers if it has already succeeded.
function use_installer {
    local installer_path="$1"
    local INSTALLER_ARGS="$2"
    installer="$(basename $installer_path)"

    # TODO: DELETE this temporary special-case crap as soon as I can, probably when this gets rewritten in a real language:
    if [[ "$installer" == "gimp" ||
          "$installer" == "hostname" ||
          "$installer" == "jiggler" ||
          "$installer" == "rvm" ||
          "$installer" == "ssh-agent" ||
          "$installer" == "synergy" ||
          "$installer" == "uhk" ]]; then
        # TODO?: debug_here "skipping \"$installer\" installer for now..."
        return 0
    else
        $installer_path $INSTALLER_ARGS || { echo_error_here "installer \"$installer\" FAILED"; return 1; }
    fi
}

main "$@"
