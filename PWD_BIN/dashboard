#!/usr/bin/env bash

# This script prints a summary of the status of development (or whatever) in the current directory, including
# information about git, todo's, tests, etc.  It can often simply call default_dashboard from the path.

THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1

echo_divider_with_text "O-=======-" "'dashboard' for $(duh) :"

# show diff with old mac files: # TODO^5: work on this diff:
if ! [ -z "$SKIGGETY_UTILS_DONOR_DIR" ]; then
    echo_divider_with_text "+-=======-" "diff summary for \"$SKIGGETY_UTILS_DONOR_DIR\":"
    diff -rq --exclude=.DS_Store --exclude=.git $THIS_DIR/.. $SKIGGETY_UTILS_DONOR_DIR | grep -v "^Only in $THIS_DIR/.." | grep --color=always '\(differ\|Only\)' | abbreviate -l 5
fi

bin/default_dashboard || accumulate_error "default_dashboard FAILED"

# show todo's:
if [ -f ./todo_report/README_in_color.txt ]; then
    cat ./todo_report/README_in_color.txt
else
    echo_divider_with_text "=" "TODO's" # IGNORE_TODO
    # purposely call whatever 'todo' is in the path in case you are overriding it with a 'PWD_BIN/todo' script:
    todo --color always | abbreviate -n 4 -t "TODO's" -d || exit_with_error "todo FAILED" # IGNORE_TODO
fi

# TODO?: tell you what command to run to commit changes or whatever
# TODO?: graph score over time (see program "progress")

# More important than the output of default_dashboard:

echo_divider_with_text "O-=======-" "END of 'dashboard' for $(duh) :"

exit_with_any_accumulated_errors
