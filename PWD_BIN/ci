#!/usr/bin/env bash

# A script with this name in a PWD_BIN directory should do a complete continuous integration cycle, whatever that
# entails, printing concise useful output, and exit on 0 only on success. This script does that for skiggety-utils. Use
# "review ci" or "review-ci" to make it run continuously.

# TODO^2: possible script renaming--ci means continuos. This is just the integration part. "review-ci" could become "ci"
# and this would become what? "i"? Or maybe every scrtipt that does one cycle and is meant to be changed and used with
# review has a name that ends in "-cycle"? I dunno. Something to think about.

THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
. $THIS_DIR/../lib/include_in_bashrc.bash || exit 1
. $THIS_DIR/../lib/skiggety-utils.bash || exit 1

# TODO^3: deal with any local changes...delete them? ...error out? both? I think it would be best to stash any at the
# beginning and then treat any created by dev as errors (but clean up after them)

git-pretty-pull || exit_with_error "git-pretty-pull FALED"

git restore --staged .

# TODO^4: ensure that the mere act of running ci doesn't cause local changes. I'm looking at PWD_BIN/lint .
dev && echo "dev SUCCEEDED" || accumulate_error "dev FAILED"

git restore todo_report

# TODO: accumulate error if any local changes are found, i.e. "maybe you want to run 'dev' instead of 'ci'? Do you want
# to commit these changes?'

exit_with_any_accumulated_errors
