#!/usr/bin/env bash

# This script makes sure everything is installed, familiarizes you with what's here, and maybe even displays the dashboard

# TODO^2: get donor code from old script "dashboard"

# # TODO: API spec (name changes):
#   # TODO: "auto-dev" will replace what was called "dashboard" when I worked at TBI. It basically runs "review dashboard"
#   # DONE: if you enter the command "review dashboard" you get the dashboard, continually updated on your screen.
#   # TODO^2: "review" will replace "loop" (same for review_while and review_until)
#   # TODO: "dashboard" will replace "summarize_status". It displays a snapshot of current status
#   # TODO: ./bin/todo should draw from the old ./PWD_BIN/status.
#   # TODO?: "./PWD_BIN/local_status" will replace ./status

echo "starting at $(date) ..."

THIS_DIR="$(cd "$(dirname $BASH_SOURCE)";pwd)"
export SKIGGETY_UTILS_DIR="$THIS_DIR"
. $SKIGGETY_UTILS_DIR/lib/include_in_bashrc.bash || exit 1
. $SKIGGETY_UTILS_DIR/lib/skiggety-utils.bash || exit 1

debug_here "utils successfully included"

# TODO^2 are "debug_here" and "echo_debug" redundant?

debug_here "let's try running update-skiggety-utils:"
debug_here "--------------------------"

./bin/update-skiggety-utils || echo_error_here "Could not run \"./bin/update-skiggety-utils"

debug_here "update-skiggety-utils completed successfully"; echo

# TODO: I'm not even sure this is a good idea, but maybe reload ~/.bashrc and stuff now that it's been updated by ./install-skiggety-utils ? :       . ./lib/reload_env || exit_with_error "could not source \"./lib/reload_env\"" # TODO: don't use relative path
# debug_here
# TODO: this is something similar that I'm also not sure is a good idea: ./bin/start_in_env.bash || exit_with_error "Could not run \"./bin/start_in_env.bash\"" # TODO: don't use relative path # TODO^2: move most things in here, including any interactive stuff

echo "To learn more about the utilities that are now available, you'll essentially have to do a code review or read the README since I don't have a real help system yet (TODO^2: show real help)";pretty_sleep 10

# TODO^3: make auto-dev optional, or maybe DELETE  calls to it, as that's not necessarily what this script is for.. (or use ask_user to have the user do it if they want)
debug_here "let's try running auto-dev:"
debug_here "---------------------------"
${SKIGGETY_UTILS_DIR}/PWD_BIN/auto-dev || exit_with_error "FAILED to run auto-dev" #TODO: since this is in ./PWD_BIN/, I shouldn't need to use a relative path

echo
exit_with_error "Technically FAILED, but if you got here, that's good."
# exit_with_error "MOVABLE BREAKPOINT"
debug_here "auto-dev completed successfully"; echo
debug_here "exiting..."
help # TODO^3: rename, test/implement
exit 0

